<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--spring中的依赖注入
        依赖注入：
            Dependency Injection
        IOC的作用
           降低程序间的耦合(依赖关系)
        依赖关系的管理
            以后都交给spring来维护
        在当前类需要用到其他类的对象，由spring为我们提供，我们需要在配置文件中说明
        依赖关系的维护：
            就称之为依赖注入
        依赖注入：
           能注入的数据：有三类
               基本类型和string
               其他bean类型(在配置文件中或者注解配置过的bean)
               复杂类型/集合类型
            注入的方式：有三种
               第一种：使用构造方法提供
               第二种：使用set方法提供
               第三种：使用注解提供
    -->
    <!--构造函数注入：
        type:用于指定要注入的数据的数据类型，该数据类型也是构造函数中某个或某些参数的类型
        index:用于指定要注入的数据给构造函数中指定索引位置的参数赋值。索引的位置从0开始
        name:用于指定给构造函数中指定名称的参数赋值
        ==========以上三个用于指定给构造函数中那个参数赋值=========
        value:用于提供基本类型和string类型的数据
        ref:用于提供其他的bean类型数据。它值的就是spring的ioc核心容器中出现过的bean对象

    优势：获取bean对象时，注入数据时必须的操作，否则对象无法创建成功
    弊端：改变了bean对象的实例化方式，使我们在创建对象时，如果用不到这些数据，也必须提供
    -->
    <bean id="accountService" class="com.itheima.service.impl.AccountServiceImpl">
        <constructor-arg name="name" value="李沁" />
        <constructor-arg name="age" value="29" />
        <constructor-arg name="birthday" ref="now" />
    </bean>
    <!--配置一个日期对象-->
    <bean id="now" class="java.util.Date"></bean>

    <!--set方法注入
        涉及的标签：property
        出现的位置：bean标签的内部
        name:用于指定注入时所调用的set方法名称
        value:用于提供基本类型和string类型的数据
        ref:用于提供其他的bean类型数据。它值的就是spring的ioc核心容器中出现过的bean对象

    -->
    <bean id="accountService2" class="com.itheima.service.impl.AccountServiceImpl2">
        <property name="name" value="赵丽颖"/>
        <property name="age" value="30"/>
        <property name="birthday" ref="now"/>
    </bean>
    <!--集合类型的注入-->
    <bean id="accountService3" class="com.itheima.service.impl.AccountServiceImpl3">
        <property name="myStrs">
            <array>
                <value>AAA</value>
                <value>bbb</value>
                <value>ccc</value>
            </array>
        </property>
        <property name="myList">
            <list>
                <value>AAA</value>
                <value>bbb</value>
                <value>ccc</value>
            </list>
        </property>
        <property name="mySet">
            <set>
                <value>AAA</value>
                <value>bbb</value>
                <value>ccc</value>
            </set>
        </property>
        <property name="myMap">
            <map>
                <entry key="testA" value="aaa"></entry>
                <entry key="testB" >
                    <value>bbb</value>
                </entry>
            </map>
        </property>
        <property name="myProps">
            <props>
                <prop key="testC">ccccc</prop>
            </props>
        </property>
    </bean>

</beans>